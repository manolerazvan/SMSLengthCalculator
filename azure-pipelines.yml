# # .NET Desktop
# # Build and run tests for .NET Desktop or Windows classic desktop solutions.
# # Add steps that publish symbols, save build artifacts, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

# trigger:
# - none

# pool:
#   vmImage: 'windows-latest'

# variables:
#   solution: '**/*.sln'
#   buildPlatform: 'Any CPU'
#   buildConfiguration: 'Release'

# steps:
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# # - task: AzureFileCopy@5
# #   inputs:
# #     SourcePath: 'D:\a\1\s\IntegrationTests\bin\Release\netcoreapp3.1'
# #     azureSubscription: 'RMDev (c00d16c7-6c1f-4c03-9be1-6934a4c49682)'
# #     Destination: 'AzureBlob'
# #     storage: 'rmazcopydemo'
# #     ContainerName: 'rmcontainer'
# #     BlobPrefix: 'RMFolder55/'
# #   name: AzureFileCopyGeoLite2Citymmdb
# #   displayName: 'Create and upload GeoLite2-City.mmdb file'
# ADO YAML Hello World Pipeline with Variable Group

trigger:
  - main

pool:
   vmImage: 'windows-latest'
   
stages:
  - stage: StageName1 
    displayName: 'StageName1'
    jobs:
      - job: JobName
        displayName: 'JobName1'
        variables: 
          - group: VGtest1
        steps:
          - script: echo "Hello, ${{ variables.MySRT }}!"
            displayName: 'Print Hello World 1'
  - stage: StageName2
    displayName: 'StageName2'
    jobs:
      - job: JobName
        displayName: 'JobName2'
        variables: 
          - group: VGtest1
        steps:
        - task: AzurePowerShell@5
          inputs:
            azureSubscription: 'WIFSCTest1'
            azurePowerShellVersion: LatestVersion
            ScriptType: 'InlineScript'
            Inline: |
              # You can write your azure powershell scripts inline here. 
              # You can also pass predefined and custom variables to this script using arguments
              Write-Host 'Hello'
              Write-Host 'World!'                        
   
#stages:
#  - stage: StageName
#    displayName: 'StageName'
#    variables:
#    - group: VGtest
#    jobs:
#      - job: JobName
#        displayName: 'JobName'
#        steps:
#          - script: echo "Hello, ${{ variables.MyVar }}!"
#            displayName: 'Print Hello World'

#variables:
#  - group: 'VGtest'
#  - template: es_variable_groups.yml

#extends:
#  template: my-pipeline-implementation.yml


# steps:
# - script: echo "Hello, ${{ variables.MySRT }}!"
#   displayName: 'Print Hello World'
